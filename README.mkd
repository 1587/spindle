# spindle - a tool to help spin distribution images

## Description
spindle is a set of scripts to aid building and working on a distribution 
image. I've been using this tool to generate Debian wheezy images for the 
Raspberry Pi, with the aim of producing reproducible, unbooted, clean setups 
that require no manual intervention.

It's not massively user friendly yet, but hopefully that should soon change 
(and of course, patches are welcome).

## Current scripts
* `setup_spindle_environment`: Sets up an schroot using wheezy and installs 
the pre-requisites needed for spindle (mainly QEMU, as it turns out I haven't 
used augeas). If you don't use this, please make sure you have at least QEMU 
1.0.1
* `wheezy-stage0`: Create and partition an SD card image, perform the initial 
debootstrap on the host and copy the files to the SD image.
* `wheezy-stage1`: Complete second stage of debootstrap under QEMU after first 
setting up a squashfs filesystem derived from Rob Landley's excellent 
Aboriginal Linux. Setup dropbear.
* `wheezy-stage2`: Add in Raspberry Pi 'firmware' and do misc config (e.g.  
fstab, network interfaces, hostname). The resulting image is bootable.
* `wheezy-stage3`: Install and configure a few useful packages (such as 
ifplugd, sudo).
* `wheezy-stage4-lxde`: Set up the lxde desktop.
* `wheezy-stage4-lxde-edu`: Install MIT Scratch, Python development tools and 
other packages.

## Getting started
TODO

## HACKING
If you want to contribute, please do file issues on the bug tracker or send in 
patches/pull requests.

spindle is written in POSIX shell script and tries to make use of QEMU where 
possible for manipulating the filesystem of the target beging generated. Look 
at the current scripts for examples. Please do talk to me if you're thinking 
of any large refactoring.

Good resources for shell scripting include:
* `man dash`
* [The POSIX standard](http://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html)
* [Insufficiently known POSIX shell features](http://apenwarr.ca/log/?m=201102#28)
* [Common shell scripting mistakes](http://www.pixelbeat.org/programming/shell_script_mistakes.html)
